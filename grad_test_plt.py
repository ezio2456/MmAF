import matplotlib
import matplotlib.pyplot as plt

matplotlib.use('TkAgg')
# 迭代次数
iterations = [i for i in range(100, 2600, 100)]

gradient_diffs_embedd = [0.16100495218283828, 0.3323269003093689, 0.3939766468097204, 0.06513889139789068,
                         0.896766944612702,
                         0.23987132347100576, 0.27563130724791957, 0.1661289382935601, 0.24579275755096755,
                         0.14844335537962255,
                         0.13023507796024725, 0.2807787238047742, 0.2542835435746335, 0.20470807183136305,
                         0.07590078198714373,
                         0.1587464784903002, 0.47955848628166836, 1.1104279623082793, 0.1776330628971186,
                         0.2467882695779002,
                         0.32611386984449514, 0.39175435812349274, 0.48702241812348446, 0.2542086932617128,
                         0.08600569172496385,
                         1.3570102844333574, 0.8704039657461173, 0.380303082662356]
acc_embedd = [89.94, 91.45, 91.49, 92.05, 92.46, 92.39, 92.30, 93.05, 93.16, 92.79, 93.11, 92.78, 93.23, 93.32,
              93.47, 93.62, 93.55, 93.87, 93.18, 93.47, 93.15, 93.68, 93.55, 93.43, 93.71, 93.68, 93.26, 93.47]

acc = [89.61, 90.76, 91.05, 91.80, 92.19, 91.59, 92.03, 92.36, 92.93, 92.65, 92.75, 92.63, 92.98, 92.67, 93.24,
       93.36, 93.31, 93.25, 92.77, 93.19, 93.09, 93.29, 93.18, 93.24, 93.26]
# 计算梯度差值变化率
gradient_diffs_0 = []

# encoder_1:
gradient_diffs_1 = []

gradient_diffs_2 = [0.7056200096386527, 0.1063867223262652, 0.05342524417894607, 0.04650435627375683,
                    1.3422774781041944,
                    0.19605311655888186, 0.20010290831077, 0.11148799884668842, 0.3098268966624906,
                    0.004562105562974716,
                    0.4024310059586985, 0.12455939181406875, 0.1964191202919255, 0.11694123036352551,
                    0.20118752404404874,
                    0.18406011841285877, 0.07300780283388729, 0.7468658626469138, 0.20281828725865295,
                    0.19120514095383204,
                    1.3291456742807535, 0.9561901443889141, 0.40014411151436374, 0.6120943572573774, 0.5585235630411709]

gradient_diffs_3 = [0.5107086181320671, 0.05264773536791529, 0.12279436440573485, 0.0037061153443447062,
                    1.219183808990116,
                    0.1093924919807279, 0.18559744234126635, 0.12208098315248571, 0.2952901028847948,
                    0.028075411415355966,
                    0.3250070412434404, 0.0953294405095325, 0.1420147402756708, 0.18966640653164274,
                    0.18611692386396603,
                    0.025656898486808254, 0.11146992461135187, 0.7781531598321781, 0.26197177347427225,
                    0.19957387838255214,
                    1.1947898514981274, 0.7519564845612776, 0.38217469674106763, 0.5989013215073223,
                    0.46069812433198004]

gradient_diffs_4 = [0.41369139624357815, 0.025131423531442775, 0.11611065655903174, 0.10927844753570078,
                    1.071110460253831,
                    0.0002183530110020516, 0.12665995229265054, 0.11107419385344985, 0.21910657110048126,
                    0.029116903277352,
                    0.2109718547539994, 0.10208608808878032, 0.10443425265578372, 0.20132639019098203,
                    0.012891907523650643,
                    0.07467095193890642, 0.10771311282208842, 0.7074845665862568, 0.2526704367810544,
                    0.15482192117652402,
                    1.035786294885958, 0.726575799450687, 0.3846344301129557, 0.5820947531028531, 0.27466927929982465]

gradient_diffs_5 = [0.2727825320636318, 0.027041288301398136, 0.06773464199853496, 0.17653495053794388,
                    0.723072690822104,
                    0.10712176737004935, 0.07629328364493045, 0.09555708295788642, 0.1636760213708057,
                    0.02232577303384238,
                    0.19832331029973072, 0.040995565155633545, 0.07116696794599921, 0.1952939557148674,
                    0.05844370929667707,
                    0.09714418960306732, 0.08420517855714044, 0.7489667671297598, 0.16953626907009522,
                    0.11859199963387805,
                    0.8743620884225282, 0.6233763772811379, 0.36485092186217055, 0.7743334436502279, 0.295792745469119]

gradient_diffs_6 = [0.26604693284360825, 0.20644822270199173, 0.2669204874515842, 0.6191178749704082,
                    1.2355074646903481,
                    0.6982062134348661, 0.08008164652186739, 0.03644036771478785, 0.18821288856797394,
                    0.28339090149886964,
                    0.0093459322719852, 0.07496767641919283, 0.20458242341582533, 0.3423328239071882,
                    0.016167332421119347,
                    0.10886234381267486, 0.39462468122231925, 0.12923678870181374, 0.3647487324308397, 0.20613688063304,
                    0.13162541271120318, 0.06917956667938638, 0.4080036850864064, 0.12063451317388148,
                    0.09045095102180721]
# embeddings 0.2
# 阈值暂定0.02， 正常训练1个epoch
gradient_diffs_7 = []

gradient_diffs_8 = []

gradient_diffs_9 = []

gradient_diffs_10 = []

gradient_diffs_11 = []

# # 绘制图表
# plt.figure(figsize=(10, 6))
# plt.plot(iterations, gradient_diffs, marker='o')
# plt.xlabel('Iterations')
# plt.ylabel('Gradient Difference')
# plt.title('Gradient Difference Over Iterations')
# plt.grid(True)
# plt.show()
fig, ax1 = plt.subplots(figsize=(10, 6))
# 绘制第一个 y 轴的数据
ax1.set_xlabel('Iterations')
ax1.set_ylabel('Gradient Difference', color='tab:blue')
ax1.plot(iterations, gradient_diffs_4, marker='o', color='tab:blue', label='Gradient Difference')
ax1.tick_params(axis='y', labelcolor='tab:blue')

# 创建第二个 y 轴
ax2 = ax1.twinx()
ax2.set_ylabel('Accuracy', color='tab:green')
ax2.plot(iterations, acc, marker='x', color='tab:green', label='Accuracy')
ax2.tick_params(axis='y', labelcolor='tab:green')

# 设置图表标题
plt.title('Gradient Difference and Accuracy Over Iterations')
x = '4'
# 添加图例
fig.tight_layout()
fig.legend(loc='upper left', bbox_to_anchor=(0.1, 0.9))
filename = f'data_plt/{x}.png'
plt.savefig(filename)

# 显示图表
# plt.show()
